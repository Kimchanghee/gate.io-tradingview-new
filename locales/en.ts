// locales/en.ts - English translations
export const en = {
  // Header
  logo: "Gate.io Futures Trading",
  testnet: "Testnet",
  mainnet: "Mainnet",
  
  // API Settings
  apiSettings: "Gate.io API Settings",
  apiKey: "API Key",
  apiSecret: "API Secret",
  currentNetwork: "Current Network",
  networkHint: "You can change the network from the header above",
  connectedNetworkLabel: "Connected network",
  apiBaseUrlLabel: "Gate.io API endpoint",
  networkAutoSwitchedTestnet: "Detected Gate.io Testnet credentials. Switched to Testnet automatically.",
  networkAutoSwitchedMainnet: "Detected Gate.io Mainnet credentials. Switched to Mainnet automatically.",
  connect: "Connect API",
  connecting: "Connecting...",
  disconnect: "Disconnect",
  refresh: "Refresh",
  connected: "Connected",
  disconnected: "Disconnected",
  enterApiCredentials: "Please enter API key and secret",
  connectionSuccess: "API connection successful",
  connectionFailed: "API connection failed",
  connectionError: "Error occurred during connection",
  invalidCredentials: "Invalid API credentials",
  
  // Account Info
  totalEstimatedAssets: "Total Estimated Assets (USDT)",
  accountStatus: "Account Status",
  futuresAccount: "Futures",
  spotAccount: "Spot",
  marginAccount: "Margin",
  optionsAccount: "Options",
  walletAccount: "Wallet",
  futuresAccountStatus: "Futures Account Status",
  spotAccountBalance: "Spot Account Balance",
  marginAccountInfo: "Margin Account",
  optionsAccountInfo: "Options Account",
  walletAccountInfo: "Wallet Account",
  totalWalletBalance: "Total Wallet Balance",
  walletDetails: "Wallet Details",
  noWalletInfo: "No wallet information available",
  
  // Asset Info
  totalAssets: "Total Assets",
  available: "Available",
  positionMargin: "Position Margin",
  orderMargin: "Order Margin",
  unrealizedPnl: "Unrealized PnL",
  locked: "Locked",
  borrowed: "Borrowed",
  interest: "Interest",
  riskLevel: "Risk Level",
  positionValue: "Position Value",
  
  // Position Dashboard
  positionDashboard: "Position Dashboard",
  totalPositions: "Total Positions",
  totalInvestment: "Total Investment",
  totalPnl: "Total PnL",
  currentValue: "Current Value",
  profit: "Profit",
  loading: "Loading",
  noActivePositions: "No active positions",
  quantity: "Quantity",
  entryPrice: "Entry Price",
  currentPrice: "Current Price",
  markPrice: "Mark Price",
  pnl: "PnL",
  pnlPercent: "PnL %",
  size: "Size",
  margin: "Margin",
  leverage: "Leverage",
  closePosition: "Close Position",
  positionOpened: "Position opened",
  positionClosed: "Position closed",
  long: "LONG",
  short: "SHORT",
  noPositions: "No open positions",
  
  // Trading Settings
  tradingSettings: "Integrated Trading Settings",
  autoTrading: "Auto Trading",
  autoTradingDesc: "Execute trades automatically via webhook signals",
  on: "ON",
  off: "OFF",
  defaultInvestmentAmount: "Default Investment Amount (USDT)",
  defaultInvestmentHint: "Default amount to invest per signal",
  defaultLeverage: "Default Leverage (x)",
  defaultLeverageHint: "Used when leverage is not specified in signal",
  riskPerTrade: "Risk per Trade (%)",
  expectedLoss: "Expected Loss",
  riskManagement: "Risk Management",
  maxDailyLoss: "Max Daily Loss Limit (%)",
  maxDailyLossHint: "Auto trading stops when limit is reached",
  emergencyStop: "Emergency Stop Mode (Stop all auto trading)",
  currentSettings: "Current Settings Summary",
  saveSettings: "Save Settings",
  settingsSaved: "Settings saved",
  saved: "Saved!",
  active: "Active",
  inactive: "Inactive",
  
  // Webhook
  webhookSettings: "Webhook Settings",
  webhookDescription: "Send JSON signals to execute trades automatically",
  webhookUrlDesc: "URL to use in TradingView Alert:",
  webhookStatus: "Status:",
  activated: "Activated",
  deactivated: "Deactivated",
  copy: "Copy",
  copied: "Copied!",
  startWebhook: "Start Server",
  stopWebhook: "Stop Server",
  webhookStarted: "Webhook server started",
  webhookStopped: "Webhook server stopped",
  webhookJsonExample: "TradingView Alert JSON Example:",
  webhookHint: "Create Alert in TradingView → Enter Webhook URL → Set JSON message",
  urlCopied: "URL copied",
  
  // Logs
  realtimeLogs: "Real-time Logs",
  totalLogs: "Total Logs",
  realtime: "Real-time",
  autoScroll: "Auto Scroll",
  clear: "Clear",
  noLogs: "No logs yet.",
  logsHint: "Send a webhook or call the API.",
  lastUpdate: "Last update:",
  webhookLogs: "Webhook Logs",

  // Account details
  totalFuturesAssets: "Total Futures Assets",
  availableForTrading: "Available for Trading",
  positionMarginDetail: "Position Margin",
  unrealizedPnlDetail: "Unrealized P&L",
  assetFormula: "Total Assets = Available + Position Margin + Unrealized P&L",
  assetBreakdown: "Futures + Spot USDT + Margin Net + Options",
  unableToLoadFutures: "Unable to load futures account information.",
  noFundsInFutures: "If your futures account has no funds,",
  transferFromSpot: "please transfer funds from spot to futures.",

  // Others
  noAssets: "No assets",
  optionsNotActivated: "Options account not activated",
  fundTransferWarning: "No funds in futures account. Please transfer funds from spot to futures.",
  symbol: "Symbol",
  investmentAmount: "Investment Amount",

  // UID & registration
  userRegistrationTitle: "UID Verification & Strategy Request",
  uidLabel: "Gate.io UID",
  uidPlaceholder: "Enter your numeric Gate.io UID",
  uidLoginHelp: "Log in with your UID and submit the request so the admin can review it.",
  uidLoginButton: "UID Login",
  uidRegisterButton: "Register UID",
  uidLoginRequiredMessage: "Please enter your UID.",
  strategySelectLabel: "Strategies you want to subscribe to",
  strategyNone: "No strategies available yet.",
  strategySelectionRequiredMessage: "Please select at least one strategy.",
  registrationRequestFailed: "Registration failed. Please try again shortly.",
  registrationReviewNotice: "Your registration request is forwarded to the admins immediately and will be reviewed within three hours.",
  registrationPopupMessage: "An admin will approve the request within three hours.",
  registrationRequestSent: "Registration request received. An admin will review it within three hours.",
  registrationRequestError: "An error occurred while sending the request.",
  uidLoginFailed: "Failed to load UID information. Please double-check.",
  uidLoginSuccess: "UID status updated successfully.",
  uidLoginError: "Error while checking UID status.",
  currentStatusLabel: "Current status",
  statusApproved: "Approved",
  statusPending: "Pending",
  statusDenied: "Denied",
  statusNotRegistered: "Not registered",
  statusUnknown: "Unknown",
  uidPendingNotice: "Waiting for admin approval. We will notify you once it is complete.",
  uidDeniedNotice: "Your request was denied. Please contact the administrator.",
  requestedStrategiesLabel: "Requested strategies",
  approvedStrategiesLabel: "Approved strategies",
  accessKeyLabel: "Access key",
  uidAuthRequired: "Please complete UID verification first.",

  // Webhook & signals
  webhookIndicatorHint: "Your personal webhook only delivers the strategies you selected. Use it directly inside TradingView.",
  webhookPendingNotice: "Once approved your dedicated webhook URL becomes active.",
  webhookLoginRequired: "Webhook access is unlocked after logging in with UID and receiving admin approval.",
  webhookStrategiesTitle: "Subscribed strategies",
  webhookNoStrategies: "No approved strategies yet.",

  signalFeedTitle: "Live Strategy Signals",
  signalLoginRequired: "Log in with your UID to view live strategy signals.",
  signalPendingMessage: "Waiting for admin approval. Signals will appear when you are approved.",
  signalDeniedMessage: "Your access was denied. Please contact the administrator.",
  signalStrategiesTitle: "Strategies delivering signals",
  signalNoStrategies: "No approved strategies yet.",
  signalErrorForbidden: "Access forbidden. Please verify your UID approval status.",
  signalErrorGeneric: "Could not load signals due to an error.",
  signalEmpty: "No signals received yet."
};